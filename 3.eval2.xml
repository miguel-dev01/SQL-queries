<?xml version='1.0' encoding='UTF-8'?>
<relacionsql>
	<configdb>
		<hostdb>r2d2</hostdb>
		<esquemadb>instituto</esquemadb>
		<usuariodb>instituto</usuariodb>
		<passdb>instituto</passdb>
	</configdb>
	<student>
		<alumno></alumno>
		<finalgrade>0</finalgrade>
		<totalgrade>0</totalgrade>
		<maxgrade>30</maxgrade>
	</student>
	<consultas>
		<query id="1" peso="1">
			<descq>
				Hallar un listado de profesores con nombre y apellidos ordenados 
				por apellido1,apellido2 y nombre alfabéticamente  
			</descq>
			<resppropo>
				select p.nombre, p.apellido1, p.apellido2 
				from profesor p 
				order by p.apellido1, p.apellido2, p.nombre;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="2" peso="1">
			<descq>
				Hallar el nº total de alumnos diferentes de la población Murcia, 
				nombra el campo como num_murcia 
			</descq>
			<resppropo>
				select count(a.nre) as num_murcia
				from alumno a 
				inner join codigopostal c on a.cp = c.cp 
				where c.poblacion = "Murcia";
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="3" peso="1">
			<descq>
				Hallar la nota media (redondeado con 1 decimal) de todas las matriculas de 
				2010. Nombra el campo como nota_media_2010
			</descq>
			<resppropo>
				select round(avg(m.nota),1) as nota_media_2010
				from matricula m
				where m.anyo = "2010";
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="4" peso="2">
			<descq>
				 Hallar las iniciales del nombre y apellido concatenados con un 
				 punto y en mayúsculas (Ejemplo: C.R.D) de los profesores que impartan 
				 modulos en cuya descripcion aparezca la palabra 'datos'. 
				 Denomina al campo como iniciales. Orenalo por ese campo obtenido. 
				 Y quita los duplicados.
			</descq>
			<resppropo>
				select distinct concat_ws(".",SUBSTRING(nombre, 1,1), SUBSTRING(apellido1, 1,1), SUBSTRING(apellido2, 1,1)) as iniciales
				from profesor p
				inner join imparte i on i.nrp_profesor = p.nrp 
				inner join asignatura a on a.cod_asignatura = i.cod_asig 
				where a.descripcion like '%datos%'
				order by iniciales;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="5" peso="2">
			<descq> 
				Hallar el nº de asignaturas diferentes que se han impartido en el 
				'Edificio B'. LLama al campo num_asig.
			</descq>
			<resppropo>
				select count(distinct a.cod_asignatura) as num_asig
				from imparte i
				inner join edificio e on i.cod_edificio = e.cod_edificio
				inner join asignatura a on a.cod_asignatura = i.cod_asig 
				where e.nombre = "Edificio B";
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="6" peso="2">
			<descq>
				Hallar el numero de alumnos diferentes matriculados en los años 
				2007 0 2009 pero que tengan actualmente  40 años o más. 
				Llama al campo como num_alum.
			</descq>
			<resppropo>
				select count(distinct a.nre) as num_alum
				from alumno a 
				inner join matricula m on a.nre = m.nre 
				where (m.anyo = 2007 or m.anyo = 2009) and 
				datediff(current_date(),fecha_nac)/365 >= 40;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="7" peso="3">
			<descq>
				 Hallar el nombre y apellidos concatenados con espacios (como nom_apell)) y 
				 nombre de departamento donde trabajan los profesores del departamento de 
				 sistemas. Ordenalos por el campo nom_apell.
			</descq>
			<resppropo>
				select CONCAT_WS(' ', p.nombre, p.apellido1, p.apellido2) as nom_apell, d.nombre 
				from departamento d 
				inner join profesor p on p.cod_departamento = d.cod_departamento
				where d.nombre = 'Sistemas'
				order by nom_apell;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="8" peso="3">
			<descq>
				Hallar los nombres y apellidos de los alumnos, junto con el nombre de asignaturas y notas 
				obtenidas en éstas pero solo de aquellas asignaturas dónde la nota media de todos los 
				alumnos sea >=5.6 para esa asignatura
				ordenalo alfabéticamente por apellido1, apellido2 y nombre. Ayuda: 67 filas
			</descq>
			<resppropo>
				select a.nombre, a.apellido1, a.apellido2, asi.descripcion, m.nota 
				from alumno a 
				inner join matricula m on a.nre = m.nre 
				inner join asignatura asi on asi.cod_asignatura = m.cod_asig
				where asi.descripcion = (select asi2.descripcion from matricula m2 inner join asignatura asi2 on 
					asi2.cod_asignatura = m2.cod_asig inner join alumno a2 on a2.nre = m2.nre 
					where asi2.cod_asignatura = asi.cod_asignatura
					group by asi2.cod_asignatura
					having avg(m2.nota) >= 5.6);
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		
		<query id="9" peso="3">
			<descq>
				Hallar codigo de asignatura y descripcion,sin duplicados, de aquellas 
				asignaturas se impartieron en el Edificio A o Edificio B pero en los años 2010 o 
				2007  utiliza al menos una subconsulta para la reunión de dos tablas. 
				Ordenalo por codigo de asignatura. Ayuda 31 filas
			</descq>
			<resppropo>
				select distinct asi.cod_asignatura, asi.descripcion
				from asignatura asi inner join imparte i on i.cod_asig = asi.cod_asignatura
				where i.cod_edificio in
					(select e.cod_edificio from edificio e where (i.anyo = 2007 or i.anyo = 2010) 
					and e.nombre = "Edificio A")
					or i.cod_edificio in 
					(select e2.cod_edificio from edificio e2 where (i.anyo = 2007 or i.anyo = 2010) 
						and e2.nombre = "Edificio B");
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="10" peso="3">
			<descq>
				Hallar la nota media por cada departamento considerando las notas de 2008 
				y 2009 solamente (impartidas y matriculadas). 
				Muestra codigo de departamento, nombre de departamento y nota media 
				(como nota_media) ordenados por nota media
			</descq>
			<resppropo>
				select d.cod_departamento, d.nombre, avg(m.nota) as nota_media
				from departamento d 
				inner join profesor p on d.cod_departamento = p.cod_departamento 
				inner join imparte i on i.nrp_profesor = p.nrp 
				inner join asignatura asi on asi.cod_asignatura = i.cod_asig 
				inner join matricula m on m.cod_asig = asi.cod_asignatura 
				where (i.anyo = 2008 or i.anyo = 2009) and (m.anyo = 2008 or m.anyo = 2009)
				group by d.cod_departamento, d.nombre
				order by nota_media;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>

		<query id="11" peso="4">
			<descq>
				Hallar la nota media por cada profesor (de sus asignaturas impartidas).
				Muestra nrp profesor, dni y nota media (como nota_media). Imprime solo 
				aquellas notas medias y profesores que tengan una nota media >= 5 
				ordenalos por nrp. Ayuda: 12 filas
			</descq>
			<resppropo>
				select p.nrp, p.dni, avg(m.nota) as nota_media
				from profesor p inner join imparte i on i.nrp_profesor = p.nrp 
				inner join asignatura asi on asi.cod_asignatura = i.cod_asig 
				inner join matricula m on m.cod_asig = asi.cod_asignatura
				group by p.nrp 
				having nota_media >= 5;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
<!-- ATENCIÓN: 
  A partir de aquí a elegir solo  1 para hacer
-->
		<query id="12" peso="5">
			<descq>
				Hallar descripcion de asignatura, nombre, apellidos, edad en años (como edad) y nota, 
				de aquellos alumnos 
				que han obtenio la mínima nota en cada asignatura. Muestra descripcion de asignatura, 
				nombre, apellidos, edad y nota. Ordenalos alfabéticamente por alumno y por 
				edad de menor a mayor.Incluye solo
				los que sean mayores de 48 años, incluye duplicados si existen. Ayuda: 48 filas.
			</descq>
			<resppropo>
				select asi.descripcion, a.nombre, a.apellido1, a.apellido2, round(DATEDIFF(CURRENT_DATE(),a.fecha_nac)/365) as eedad, m.nota 
				from alumno a inner join matricula m on a.nre = m.nre 
				inner join asignatura asi on asi.cod_asignatura = m.cod_asig
				where m.nota = (select min(m2.nota) from matricula m2 
								inner join asignatura asi2 on asi2.cod_asignatura = m2.cod_asig 
								inner join alumno a2 on a2.nre = m2.nre
								where asi.cod_asignatura = asi2.cod_asignatura)
				group by a.nre, asi.descripcion, a.nombre, a.apellido1, a.apellido2, m.nota
				having eedad > 48
				order by a.apellido1, a.apellido2, a.nombre, eedad asc;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="13" peso="5">
			<descq>
	         Hallar para cada asignatura la descripcion de la asignatura nombre y apellidos y edad en 
	         años (como edad) del/los alumno/s de menor edad matriculado/s en esa asignatura. 
	         Ordenalos alfabéticamente por alumno y por edad de menor a mayor. I
	         ncluye solo los que sean menores de 30 años. SIN INCLUIR DUPLICADOS. Ayuda: 90 filas, 5 alumnos.
			</descq>
			<resppropo>
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="14" peso="5">
			<descq>
                Hallar para cada departamento, nombre de departamento, nombre y apellidos del/los profesores 
                y nota media (como nota_media) que hayan calificado de media por debajo de la nota media 
                para ese departamento. Ordénalo por nombre de departamento y luego alfabéticamente por 
                profesor. Ayuda: 12 filas (si salen 15 filas está casi correcto)
			</descq>
			<resppropo>
				select d.nombre, p.nombre, p.apellido1, p.apellido2, avg(m.nota) as nota_media
				from departamento d inner join profesor p on p.cod_departamento = d.cod_departamento 
				inner join imparte i on i.nrp_profesor = p.nrp 
				inner join asignatura asi on asi.cod_asignatura = i.cod_asig 
				inner join matricula m on m.cod_asig = asi.cod_asignatura
				group by d.cod_departamento, d.nombre, p.nombre, p.apellido1, p.apellido2
				having nota_media < any(
								select avg(m2.nota) from departamento d2 
								inner join profesor p2 on p2.cod_departamento = d2.cod_departamento 
								inner join imparte i2 on i2.nrp_profesor = p2.nrp 
								inner join asignatura asi2 on asi2.cod_asignatura = i2.cod_asig 
								inner join matricula m2 on m2.cod_asig = asi2.cod_asignatura
								where d.cod_departamento = d2.cod_departamento);
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
	</consultas> 
</relacionsql>
